[tool.poetry]
name = "local"
version = "0.2.1"
description = "Local code for generation of hydrogen and associated input files for CSIRO's earth system modelling. The rest of the functionality is derived from the dependencies."
authors = [
    "Jared Lewis <jared.lewis@climate-resource.com>",
    "Zebedee Nicholls <zebedee.nicholls@climate-resource.com>",
]
readme = "README.md"
packages = [{include = "local", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"
notebook = "^6.5.4"
doit = "^0.36.0"
ipywidgets = "^8.0.6"
attrs = "^23.1.0"
cattrs = "^22.2.0"
jupytext = "^1.14.5"
papermill = "^2.4.0"
scmdata = "^0.15.1"
matplotlib = "^3.7.1"
datapackage = "^1.15"
bookshelf = "^0.2.2"
scipy = "^1.4"
# TODO: remove dependency
# Technically it is MIT, but I don't think that is what CA intended
domestic-pathways = {git = "https://gitlab.com/lewisjarednz/domestic_pathways.git", rev="custom-registry"}
seaborn = "^0.12.2"
joblib = "^1.2.0"
aneris-iamc = {git = "https://github.com/lewisjared/aneris.git", rev = "feng"}
netcdf4 = "^1.6.3"
carpet-concentrations = {git = "https://gitlab.com/climate-resource/carpet-concentrations.git", rev = "hotfix", extras = ["cfxarray"]}

## Temporary pin until requests and botocore support urllib3>=2
# https://github.com/psf/requests/issues/6432
# https://github.com/boto/botocore/issues/2926
urllib3 = "<2"
openscm-runner = "^0.12.1"
pymagicc = "^2.1.3"
nc-time-axis = "^1.4.1"
spaemis = "^0.2.3"
deepmerge = "^1.1.0"
pyreadr = "^0.4.7"
openscm-zenodo = "^0.1.3"
datatoolbox = "0.5.6"

[tool.poetry.group.dev.dependencies]
commitizen = "^3.2.1"
black = "^23.3.0"
ruff = "^0.0.267"
pre-commit = "^3.3.1"
mypy = "^1.3.0"
pandas-stubs = "^2.0.1.230501"
types-pyyaml = "^6.0.12.10"
types-tqdm = "^4.65.0.1"

[tool.jupytext]
formats = "ipynb,py:percent"

[tool.ruff]
src = ["src"]
target-version = "py39"
select = [
    "E",  # pycodestyle error
    "W",  # pycodestyle warning
    "F",  # pyflakes
    "I",  # isort
    "D",  # pydocstyle
    "PL",  # pylint
    "TRY",  # tryceratops
    "NPY",  # numpy rules
    "RUF",  # ruff specifics
    "UP",  # pyupgrade
    "S",  # flake8-bandit
    # pandas support via pandas-vet. In some cases we will want to disable
    # this because it can lead to too many false positives.
    "PD",
]
unfixable = [
    "PD002",  # Disable autofix for inplace as this often introduces bugs
]
ignore = [
    "D200",  # One-line docstring should fit on one line with quotes
    "D400",  # First line should end with a period
]
# Provide some leeway for long docstring, this is otherwise handled by black
line-length = 110

[tool.ruff.per-file-ignores]
"notebooks/*" = [
    "D100",  # Missing docstring in public module
    "E402",  # Module level import not at top of file
    "E501",  # Line too long (false failure on comments coming from markdown cells)
    "S101",  # Use of `assert` detected
    "PD010", # `.pivot_table` is preferred to `.pivot` or `.unstack`; provides same functionality
    "PD011", # False positives when using scmdata
]
"stubs/*" = [
    "D100",  # Missing docstring in public module
    "D103",  # Missing docstring in public function
]

[tool.ruff.isort]
known-first-party = ["src"]

[tool.ruff.pydocstyle]
convention = "numpy"

# TODO: Use stricter mypy rules
#[tool.mypy]
#strict = true
## show error codes on failure with context
#show_error_codes = true
#show_error_context = true
## warn if code can't be reached
#warn_unreachable = true
## importing following uses default settings
#follow_imports = "normal"

[[tool.mypy.overrides]]
module = "scmdata.*"
ignore_missing_imports = true

[tool.commitizen]
version = "0.2.1"
version_files = ["pyproject.toml:^version"]
tag_format = "v$version"
major_version_zero = true
